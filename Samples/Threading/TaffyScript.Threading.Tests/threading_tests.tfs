using TaffyScript.Threading;

namespace TaffyScript.Threading.Tests {
    script main {
        print("Threading without locks")
        task_run(print_thread_id);
        task_run(print_thread_id);
        thread_sleep(500);
        print("\nFinished!\n");

        var key = new ThreadLock();
        var callback = script { print_thread_id_locked(key); }
        print("Threading with locks");
        task_run(callback);
        task_run(callback);
        thread_sleep(500);
        print("Finished\n");

        print("Starting thread that has a result:");
        var task = task_run(script_with_result);
        var result = task.result;
        print_thread_result(result);

        print("\nStarting thread that throws an exception:")
        task = thread_start(script_with_exception);
        result = task.result;
        print_thread_result(result);
    }

    script print_thread_id() {
        for(var i = 0; i < 10; i++) {
            print(thread_get_id());
            thread_sleep(1);
        }
    }

    script print_thread_id_locked(key) {
        key.lock();
        for(var i = 0; i < 10; i++) {
            print(thread_get_id());
            thread_sleep(1);
        }
        print("");
        key.unlock();
    }

    script script_with_result() {
        return 1;
    }

    script script_with_exception() {
        show_error("Thread " + string(thread_get_id()) + " threw an error", true);
    }

    script print_thread_result(result) {
        if(result.exception != "")
            print("Thread Failed: " + result.exception);
        else
            print("Thread Result: " + string(result.value));
    }
}