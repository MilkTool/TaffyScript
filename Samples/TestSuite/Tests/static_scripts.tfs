using UnitTests;

namespace LanguageTests {
    script run_static_tests() {
        var tests = new UnitTest("Static Tests",
                                 static_invoke,
                                 static_namespace_invoke,
                                 static_through_instance,
                                 static_through_child_instance,
                                 static_through_del,
                                 static_through_namespace_del);
        tests.run_tests();
    }

    script static_invoke() {
        test_it("type.static_script()");
        assert_equal(MathF.add(5, 10), 15);
    }

    script static_namespace_invoke() {
        test_it("namespace.type.static_script()");
        assert_equal(LanguageTests.Inner.Cow.moo(), "moo");
    }

    script static_through_instance() {
        test_it("inst.script_that_calls_static()");
        var cow = new Inner.Cow();
        assert_equal(cow.make_noise(), "moo");
    }

    script static_through_child_instance() {
        test_it("inst.script_that_calls_parent_static()");
        var calf = new Inner.Calf();
        assert_equal(calf.make_noise(), "moo");
    }

    script static_through_del() {
        test_it("del = type.static");
        var del = MathF.add;
        assert_equal(del(10, 5), 15);
    }

    script static_through_namespace_del() {
        test_it("del = namespace.type.static");
        var moo = LanguageTests.Inner.Cow.moo;
        assert_equal(moo(), "moo");
    }

    object MathF {
        static script add(left, right) {
            return left + right;
        }
    }
}

namespace LanguageTests.Inner {
    object Cow {
        script make_noise() {
            return moo();
        }

        static script moo() {
            return "moo";
        }
    }

    object Calf : Cow {
        script call_parent() {
            return moo();
        }
    }
}